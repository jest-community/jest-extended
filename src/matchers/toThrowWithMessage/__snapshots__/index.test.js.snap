// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`.toThrowWithMessage fails when a callback function is not a function 1`] = `
"<dim>expect(</><red>function</><dim>).toThrowWithMessage(</><green>type</>, <green>message</><dim>)</>

Received value must be a function but instead \\"2\\" was found"
`;

exports[`.toThrowWithMessage fails when a callback provided doesnt throw an error 1`] = `
"Expected the function to throw an error.
But it didn't throw anything."
`;

exports[`.toThrowWithMessage fails when a wrong type of error is thrown 1`] = `
"<dim>expect(</><red>function</><dim>).toThrowWithMessage(</><green>type</>, <green>message</><dim>)</>

Expected to throw:
  <green>[TypeError: Expected message]</>
Thrown:
  <red>[SyntaxError: Expected message]</>
"
`;

exports[`.toThrowWithMessage fails when callback function is not provided 1`] = `
"<dim>expect(</><red>function</><dim>).toThrowWithMessage(</><green>type</>, <green>message</><dim>)</>

Received value must be a function but instead \\"undefined\\" was found"
`;

exports[`.toThrowWithMessage fails when error message is not provided 1`] = `
"<dim>expect(</><red>function</><dim>).toThrowWithMessage(</><green>type</>, <green>message</><dim>)</>

 Message argument is required. "
`;

exports[`.toThrowWithMessage fails when error message provided is not a string or regex 1`] = `
"<dim>expect(</><red>function</><dim>).toThrowWithMessage(</><green>type</>, <green>message</><dim>)</>

Unexpected argument for message
Expected: \\"string\\" or \\"regexp
Got: \\"2\\""
`;

exports[`.toThrowWithMessage fails when error type is not provided 1`] = `
"<dim>expect(</><red>function</><dim>).toThrowWithMessage(</><green>type</>, <green>message</><dim>)</>

Expected type to be a function but instead \\"undefined\\" was found"
`;

exports[`.toThrowWithMessage passes when given an Error with a regex error message 1`] = `
"<dim>expect(</><red>function</><dim>).not.toThrowWithMessage(</><green>type</>, <green>message</><dim>)</>

Expected not to throw:
  <green>[TypeError: /Expected message/]</>
Thrown:
  <red>[TypeError: Expected message]</>
"
`;

exports[`.toThrowWithMessage passes when given an Error with a string error message 1`] = `
"<dim>expect(</><red>function</><dim>).not.toThrowWithMessage(</><green>type</>, <green>message</><dim>)</>

Expected not to throw:
  <green>[TypeError: Expected message]</>
Thrown:
  <red>[TypeError: Expected message]</>
"
`;
