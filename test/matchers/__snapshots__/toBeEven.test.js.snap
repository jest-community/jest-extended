// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`.not.toBeEven fails when given an even number 1`] = `
"<dim>expect(</intensity><red>received</color><dim>).not.toBeEven()</intensity>

Expected value to not be an even number received:
 <red>2</color>"
`;

exports[`.toBeEven fails when not given an even number 1`] = `
"<dim>expect(</intensity><red>received</color><dim>).toBeEven()</intensity>

Expected value to be an even number received:
 <red>false</color>"
`;

exports[`.toBeEven fails when not given an even number 2`] = `
"<dim>expect(</intensity><red>received</color><dim>).toBeEven()</intensity>

Expected value to be an even number received:
 <red>true</color>"
`;

exports[`.toBeEven fails when not given an even number 3`] = `
"<dim>expect(</intensity><red>received</color><dim>).toBeEven()</intensity>

Expected value to be an even number received:
 <red>\\"\\"</color>"
`;

exports[`.toBeEven fails when not given an even number 4`] = `
"<dim>expect(</intensity><red>received</color><dim>).toBeEven()</intensity>

Expected value to be an even number received:
 <red>1</color>"
`;

exports[`.toBeEven fails when not given an even number 5`] = `
"<dim>expect(</intensity><red>received</color><dim>).toBeEven()</intensity>

Expected value to be an even number received:
 <red>{}</color>"
`;

exports[`.toBeEven fails when not given an even number 6`] = `
"<dim>expect(</intensity><red>received</color><dim>).toBeEven()</intensity>

Expected value to be an even number received:
 <red>[Function anonymous]</color>"
`;

exports[`.toBeEven fails when not given an even number 7`] = `
"<dim>expect(</intensity><red>received</color><dim>).toBeEven()</intensity>

Expected value to be an even number received:
 <red>undefined</color>"
`;

exports[`.toBeEven fails when not given an even number 8`] = `
"<dim>expect(</intensity><red>received</color><dim>).toBeEven()</intensity>

Expected value to be an even number received:
 <red>null</color>"
`;

exports[`.toBeEven fails when not given an even number 9`] = `
"<dim>expect(</intensity><red>received</color><dim>).toBeEven()</intensity>

Expected value to be an even number received:
 <red>NaN</color>"
`;
