// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`.not.toContainValues fails when given object contains all values including arrays 1`] = `
"<dim>expect(</intensity><red>received</color><dim>).not.toContainValues(</intensity><green>expected</color><dim>)</intensity>

Expected object to not contain all values:
  <green>["duck", [{"bar": false, "foo": 0, "hello": "world"}]]</color>
Received:
  <red>{"donald": "duck", "message": [{"bar": false, "foo": 0, "hello": "world"}]}</color>"
`;

exports[`.not.toContainValues fails when given object contains all values including objects 1`] = `
"<dim>expect(</intensity><red>received</color><dim>).not.toContainValues(</intensity><green>expected</color><dim>)</intensity>

Expected object to not contain all values:
  <green>[{"bar": false, "foo": 0, "hello": "world"}, "duck"]</color>
Received:
  <red>{"donald": "duck", "message": {"bar": false, "foo": 0, "hello": "world"}}</color>"
`;

exports[`.not.toContainValues fails when given object contains primitive values 1`] = `
"<dim>expect(</intensity><red>received</color><dim>).not.toContainValues(</intensity><green>expected</color><dim>)</intensity>

Expected object to not contain all values:
  <green>["world", false]</color>
Received:
  <red>{"bar": false, "foo": 0, "hello": "world"}</color>"
`;

exports[`.toContainValues fails when given object does not contain all primitive values 1`] = `
"<dim>expect(</intensity><red>received</color><dim>).toContainValues(</intensity><green>expected</color><dim>)</intensity>

Expected object to contain all values:
  <green>["hello", 0, false]</color>
Received:
  <red>{"bar": false, "foo": 0, "hello": "world"}</color>"
`;

exports[`.toContainValues fails when given object does not contain all values including arrays 1`] = `
"<dim>expect(</intensity><red>received</color><dim>).toContainValues(</intensity><green>expected</color><dim>)</intensity>

Expected object to contain all values:
  <green>["duck", [{"hello": "world"}]]</color>
Received:
  <red>{"donald": "duck", "message": [{"bar": false, "foo": 0, "hello": "world"}]}</color>"
`;

exports[`.toContainValues fails when given object does not contain all values including objects 1`] = `
"<dim>expect(</intensity><red>received</color><dim>).toContainValues(</intensity><green>expected</color><dim>)</intensity>

Expected object to contain all values:
  <green>[{"hello": "world"}]</color>
Received:
  <red>{"donald": "duck", "message": {"bar": false, "foo": 0, "hello": "world"}}</color>"
`;
