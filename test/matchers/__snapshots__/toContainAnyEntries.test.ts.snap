// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`.not.toContainAnyEntries fails when actual is not an object 1`] = `"expect(...).not.toContainAllEntries is not a function"`;

exports[`.not.toContainAnyEntries fails when actual is not an object 2`] = `"expect(...).not.toContainAllEntries is not a function"`;

exports[`.not.toContainAnyEntries fails when given object contains atleast one of the given entries 1`] = `
"<dim>expect(</intensity><red>received</color><dim>).not.toContainAnyEntries(</intensity><green>expected</color><dim>)</intensity>

Expected object to not contain any of the provided entries:
  <green>[["a", "qux"], ["a", "foo"]]</color>
Received:
  <red>{"a": "foo", "b": "bar", "c": "baz"}</color>"
`;

exports[`.toContainAnyEntries fails when actual is not an object 1`] = `
"<dim>expect(</intensity><red>received</color><dim>).toContainAnyEntries()</intensity>

Expected value to be of type object but received:
  <red>null</color>"
`;

exports[`.toContainAnyEntries fails when actual is not an object 2`] = `
"<dim>expect(</intensity><red>received</color><dim>).toContainAnyEntries()</intensity>

Expected value to be of type object but received:
  <red>42</color>"
`;

exports[`.toContainAnyEntries fails when given object does not contain any of the given entries 1`] = `
"<dim>expect(</intensity><red>received</color><dim>).toContainAnyEntries(</intensity><green>expected</color><dim>)</intensity>

Expected object to contain any of the provided entries:
  <green>[["a", "qux"], ["b", "foo"]]</color>
Received:
  <red>{"a": "foo", "b": "bar", "c": "baz"}</color>"
`;
